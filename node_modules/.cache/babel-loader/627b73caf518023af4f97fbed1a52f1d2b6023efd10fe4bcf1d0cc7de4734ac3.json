{"ast":null,"code":"var _jsxFileName = \"/Users/romamelnychuk/Documents/Programming/WebDev/Projects/react-freecodecamp-memes/src/components/MainForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import memesData from \"../memesData\";\nimport memesData from \"../memesData1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainForm = () => {\n  _s();\n  const [meme, setMeme] = useState({\n    topText: '',\n    bottomText: '',\n    randomImage: 'https://i.imgflip.com/265j.jpg'\n  });\n  const [allMemeImages, setAllMemeImages] = useState(memesData);\n  function getMemeImage(e) {\n    e.preventDefault();\n    const {\n      memes\n    } = allMemeImages.data;\n    const randomValue = Math.floor(Math.random() * memes.length);\n    setMeme(prevState => {\n      return {\n        ...prevState,\n        randomImage: memes[randomValue].url\n      };\n    });\n    // setMemeImage(memeImage => memes[randomValue].url)\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form--input\",\n        placeholder: \"Top text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form--input\",\n        placeholder: \"Bottom text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMemeImage,\n        className: \"form--button\",\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(MainForm, \"9KXE8srBL0+7E+xsaxZ/mcRqygw=\");\n_c = MainForm;\nexport default MainForm;\nvar _c;\n$RefreshReg$(_c, \"MainForm\");","map":{"version":3,"names":["React","useState","memesData","MainForm","meme","setMeme","topText","bottomText","randomImage","allMemeImages","setAllMemeImages","getMemeImage","e","preventDefault","memes","data","randomValue","Math","floor","random","length","prevState","url"],"sources":["/Users/romamelnychuk/Documents/Programming/WebDev/Projects/react-freecodecamp-memes/src/components/MainForm.js"],"sourcesContent":["import React, {useState} from 'react';\n// import memesData from \"../memesData\";\nimport memesData from \"../memesData1\";\n\nconst MainForm = () => {\n\n    const [meme, setMeme] = useState({\n        topText: '',\n        bottomText: '',\n        randomImage: 'https://i.imgflip.com/265j.jpg'\n    }) ;\n    const [allMemeImages, setAllMemeImages] = useState(memesData);\n\n    function getMemeImage(e) {\n        e.preventDefault();\n\n        const {memes} = allMemeImages.data;\n        const randomValue = Math.floor((Math.random()) * memes.length);\n        setMeme(prevState => {\n            return {\n                ...prevState,\n                randomImage: memes[randomValue].url\n            }\n        })\n        // setMemeImage(memeImage => memes[randomValue].url)\n    }\n\n\n\n    return (\n        <main>\n            <form className='form'>\n                <input className=\"form--input\" placeholder=\"Top text\"/>\n                <input className=\"form--input\" placeholder=\"Bottom text\"/>\n                <button onClick={getMemeImage} className=\"form--button\">Get a new meme image ðŸ–¼</button>\n            </form>\n            <div className=\"meme-img\">\n                {/*<img src={memeImage} alt=\"\"/>*/}\n            </div>\n        </main>\n    );\n};\n\nexport default MainForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC;AACA,OAAOC,SAAS,MAAM,eAAe;AAAC;AAEtC,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAEnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC;IAC7BK,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAACC,SAAS,CAAC;EAE7D,SAASS,YAAY,CAACC,CAAC,EAAE;IACrBA,CAAC,CAACC,cAAc,EAAE;IAElB,MAAM;MAACC;IAAK,CAAC,GAAGL,aAAa,CAACM,IAAI;IAClC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,MAAM,EAAE,GAAIL,KAAK,CAACM,MAAM,CAAC;IAC9Df,OAAO,CAACgB,SAAS,IAAI;MACjB,OAAO;QACH,GAAGA,SAAS;QACZb,WAAW,EAAEM,KAAK,CAACE,WAAW,CAAC,CAACM;MACpC,CAAC;IACL,CAAC,CAAC;IACF;EACJ;;EAIA,oBACI;IAAA,wBACI;MAAM,SAAS,EAAC,MAAM;MAAA,wBAClB;QAAO,SAAS,EAAC,aAAa;QAAC,WAAW,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAE,eACvD;QAAO,SAAS,EAAC,aAAa;QAAC,WAAW,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE,eAC1D;QAAQ,OAAO,EAAEX,YAAa;QAAC,SAAS,EAAC,cAAc;QAAA,UAAC;MAAuB;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACrF,eACP;MAAK,SAAS,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAEnB;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEf,CAAC;AAAC,GArCIR,QAAQ;AAAA,KAARA,QAAQ;AAuCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}