{"ast":null,"code":"var _jsxFileName = \"/Users/romamelnychuk/Documents/Programming/WebDev/Projects/react-freecodecamp-memes/src/components/MainForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import memesData from \"../memesData\";\nimport memesData from \"../memesData1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainForm = () => {\n  _s();\n  const [meme, setMeme] = useState({\n    topText: '',\n    bottomText: '',\n    randomImage: 'https://i.imgflip.com/265j.jpg'\n  });\n  const [allMemeImages, setAllMemeImages] = useState(memesData);\n  function getMemeImage(e) {\n    e.preventDefault();\n    const {\n      memes\n    } = allMemeImages.data;\n    const randomValue = Math.floor(Math.random() * memes.length);\n    const url = memes[randomValue].url;\n    setMeme(prevState => {\n      return {\n        ...prevState,\n        randomImage: url\n      };\n    });\n  }\n  const [formData, setFormData] = useState({\n    topText: '',\n    bottomText: ''\n  });\n  function changeText(e) {\n    setFormData(prevState => {\n      return {\n        ...prevState,\n        [e.target.name]: e.target.value\n      };\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: changeText,\n        name: \"topText\",\n        className: \"form--input\",\n        placeholder: \"Top text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: changeText,\n        name: \"bottomText\",\n        className: \"form--input\",\n        placeholder: \"Bottom text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMemeImage,\n        className: \"form--button\",\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        className: \"meme--image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: formData.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: formData.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(MainForm, \"Y+HZ7hCAIcymQTIXWopHZbCaImg=\");\n_c = MainForm;\nexport default MainForm;\nvar _c;\n$RefreshReg$(_c, \"MainForm\");","map":{"version":3,"names":["React","useState","memesData","MainForm","meme","setMeme","topText","bottomText","randomImage","allMemeImages","setAllMemeImages","getMemeImage","e","preventDefault","memes","data","randomValue","Math","floor","random","length","url","prevState","formData","setFormData","changeText","target","name","value"],"sources":["/Users/romamelnychuk/Documents/Programming/WebDev/Projects/react-freecodecamp-memes/src/components/MainForm.js"],"sourcesContent":["import React, {useState} from 'react';\n// import memesData from \"../memesData\";\nimport memesData from \"../memesData1\";\n\nconst MainForm = () => {\n\n    const [meme, setMeme] = useState({\n        topText: '',\n        bottomText: '',\n        randomImage: 'https://i.imgflip.com/265j.jpg'\n    }) ;\n\n    const [allMemeImages, setAllMemeImages] = useState(memesData);\n\n    function getMemeImage(e) {\n        e.preventDefault();\n\n        const {memes} = allMemeImages.data;\n        const randomValue = Math.floor((Math.random()) * memes.length);\n        const url = memes[randomValue].url;\n\n        setMeme(prevState => {\n            return {\n                ...prevState,\n                randomImage: url\n            }\n        })\n    }\n\n    const [formData, setFormData] = useState(\n        {\n            topText: '',\n            bottomText: ''\n        }\n    );\n\n    function changeText(e) {\n        setFormData(prevState => {\n            return {\n                ...prevState,\n                [e.target.name]: e.target.value\n            }\n        });\n    }\n    return (\n        <main>\n            <form className='form'>\n                <input\n                    onChange={changeText} \n                    name=\"topText\"\n                    className=\"form--input\"\n                    placeholder=\"Top text\"\n                />\n                <input\n                    onChange={changeText}\n                    name=\"bottomText\"\n                    className=\"form--input\"\n                    placeholder=\"Bottom text\"\n                />\n                <button\n                    onClick={getMemeImage}\n                    className=\"form--button\">\n                    Get a new meme image ðŸ–¼\n                </button>\n            </form>\n            <div className=\"meme\">\n                <img src={meme.randomImage} className=\"meme--image\" />\n                <h2 className=\"meme--text top\">{formData.topText}</h2>\n                <h2 className=\"meme--text bottom\">{formData.bottomText}</h2>\n            </div>\n        </main>\n    );\n};\n\nexport default MainForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC;AACA,OAAOC,SAAS,MAAM,eAAe;AAAC;AAEtC,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAEnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC;IAC7BK,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAACC,SAAS,CAAC;EAE7D,SAASS,YAAY,CAACC,CAAC,EAAE;IACrBA,CAAC,CAACC,cAAc,EAAE;IAElB,MAAM;MAACC;IAAK,CAAC,GAAGL,aAAa,CAACM,IAAI;IAClC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,MAAM,EAAE,GAAIL,KAAK,CAACM,MAAM,CAAC;IAC9D,MAAMC,GAAG,GAAGP,KAAK,CAACE,WAAW,CAAC,CAACK,GAAG;IAElChB,OAAO,CAACiB,SAAS,IAAI;MACjB,OAAO;QACH,GAAGA,SAAS;QACZd,WAAW,EAAEa;MACjB,CAAC;IACL,CAAC,CAAC;EACN;EAEA,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CACpC;IACIK,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE;EAChB,CAAC,CACJ;EAED,SAASkB,UAAU,CAACb,CAAC,EAAE;IACnBY,WAAW,CAACF,SAAS,IAAI;MACrB,OAAO;QACH,GAAGA,SAAS;QACZ,CAACV,CAAC,CAACc,MAAM,CAACC,IAAI,GAAGf,CAAC,CAACc,MAAM,CAACE;MAC9B,CAAC;IACL,CAAC,CAAC;EACN;EACA,oBACI;IAAA,wBACI;MAAM,SAAS,EAAC,MAAM;MAAA,wBAClB;QACI,QAAQ,EAAEH,UAAW;QACrB,IAAI,EAAC,SAAS;QACd,SAAS,EAAC,aAAa;QACvB,WAAW,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QACxB,eACF;QACI,QAAQ,EAAEA,UAAW;QACrB,IAAI,EAAC,YAAY;QACjB,SAAS,EAAC,aAAa;QACvB,WAAW,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAC3B,eACF;QACI,OAAO,EAAEd,YAAa;QACtB,SAAS,EAAC,cAAc;QAAA,UAAC;MAE7B;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACN,eACP;MAAK,SAAS,EAAC,MAAM;MAAA,wBACjB;QAAK,GAAG,EAAEP,IAAI,CAACI,WAAY;QAAC,SAAS,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,eACtD;QAAI,SAAS,EAAC,gBAAgB;QAAA,UAAEe,QAAQ,CAACjB;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,eACtD;QAAI,SAAS,EAAC,mBAAmB;QAAA,UAAEiB,QAAQ,CAAChB;MAAU;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1D;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEf,CAAC;AAAC,GApEIJ,QAAQ;AAAA,KAARA,QAAQ;AAsEd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}